--- a/net/minecraft/world/level/block/BlockRedstoneOre.java
+++ b/net/minecraft/world/level/block/BlockRedstoneOre.java
@@ -21,6 +21,11 @@
 import net.minecraft.world.level.block.state.properties.BlockStateBoolean;
 import net.minecraft.world.phys.MovingObjectPositionBlock;
 
+// CraftBukkit start
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.event.entity.EntityInteractEvent;
+// CraftBukkit end
+
 public class BlockRedstoneOre extends Block {
 
     public static final MapCodec<BlockRedstoneOre> CODEC = simpleCodec(BlockRedstoneOre::new);
@@ -38,14 +43,27 @@
 
     @Override
     protected void attack(IBlockData iblockdata, World world, BlockPosition blockposition, EntityHuman entityhuman) {
-        interact(iblockdata, world, blockposition);
+        interact(iblockdata, world, blockposition, entityhuman); // CraftBukkit - add entityhuman
         super.attack(iblockdata, world, blockposition, entityhuman);
     }
 
     @Override
     public void stepOn(World world, BlockPosition blockposition, IBlockData iblockdata, Entity entity) {
         if (!entity.isSteppingCarefully()) {
-            interact(iblockdata, world, blockposition);
+            // CraftBukkit start
+            if (entity instanceof EntityHuman) {
+                org.bukkit.event.player.PlayerInteractEvent event = org.bukkit.craftbukkit.event.CraftEventFactory.callPlayerInteractEvent((EntityHuman) entity, org.bukkit.event.block.Action.PHYSICAL, blockposition, null, null, null);
+                if (!event.isCancelled()) {
+                    interact(world.getBlockState(blockposition), world, blockposition, entity); // add entity
+                }
+            } else {
+                EntityInteractEvent event = new EntityInteractEvent(entity.getBukkitEntity(), world.getWorld().getBlockAt(blockposition.getX(), blockposition.getY(), blockposition.getZ()));
+                world.getCraftServer().getPluginManager().callEvent(event);
+                if (!event.isCancelled()) {
+                    interact(world.getBlockState(blockposition), world, blockposition, entity); // add entity
+                }
+            }
+            // CraftBukkit end
         }
 
         super.stepOn(world, blockposition, iblockdata, entity);
@@ -56,15 +74,20 @@
         if (world.isClientSide) {
             spawnParticles(world, blockposition);
         } else {
-            interact(iblockdata, world, blockposition);
+            interact(iblockdata, world, blockposition, entityhuman); // CraftBukkit - add entityhuman
         }
 
         return (EnumInteractionResult) (itemstack.getItem() instanceof ItemBlock && (new BlockActionContext(entityhuman, enumhand, itemstack, movingobjectpositionblock)).canPlace() ? EnumInteractionResult.PASS : EnumInteractionResult.SUCCESS);
     }
 
-    private static void interact(IBlockData iblockdata, World world, BlockPosition blockposition) {
+    private static void interact(IBlockData iblockdata, World world, BlockPosition blockposition, Entity entity) { // CraftBukkit - add Entity
         spawnParticles(world, blockposition);
         if (!(Boolean) iblockdata.getValue(BlockRedstoneOre.LIT)) {
+            // CraftBukkit start
+            if (!CraftEventFactory.callEntityChangeBlockEvent(entity, blockposition, iblockdata.setValue(BlockRedstoneOre.LIT, true))) {
+                return;
+            }
+            // CraftBukkit end
             world.setBlock(blockposition, (IBlockData) iblockdata.setValue(BlockRedstoneOre.LIT, true), 3);
         }
 
@@ -78,6 +101,11 @@
     @Override
     protected void randomTick(IBlockData iblockdata, WorldServer worldserver, BlockPosition blockposition, RandomSource randomsource) {
         if ((Boolean) iblockdata.getValue(BlockRedstoneOre.LIT)) {
+            // CraftBukkit start
+            if (CraftEventFactory.callBlockFadeEvent(worldserver, blockposition, iblockdata.setValue(BlockRedstoneOre.LIT, false)).isCancelled()) {
+                return;
+            }
+            // CraftBukkit end
             worldserver.setBlock(blockposition, (IBlockData) iblockdata.setValue(BlockRedstoneOre.LIT, false), 3);
         }
 
@@ -86,10 +114,17 @@
     @Override
     protected void spawnAfterBreak(IBlockData iblockdata, WorldServer worldserver, BlockPosition blockposition, ItemStack itemstack, boolean flag) {
         super.spawnAfterBreak(iblockdata, worldserver, blockposition, itemstack, flag);
+        // CraftBukkit start - Delegated to getExpDrop
+    }
+
+    @Override
+    public int getExpDrop(IBlockData iblockdata, WorldServer worldserver, BlockPosition blockposition, ItemStack itemstack, boolean flag) {
         if (flag) {
-            this.tryDropExperience(worldserver, blockposition, itemstack, UniformInt.of(1, 5));
+            return this.tryDropExperience(worldserver, blockposition, itemstack, UniformInt.of(1, 5));
         }
 
+        return 0;
+        // CraftBukkit end
     }
 
     @Override
